const a0_0x1bcb02 = a0_0x342d;
(function(_0x383d9b, _0xbc2c2d) {
    const _0x4a9056 = a0_0x342d,
        _0x4d491a = _0x383d9b();
    while (!![]) {
        try {
            const _0x3cfc05 = -parseInt(_0x4a9056(0x1d0)) / 0x1 + parseInt(_0x4a9056(0x1d2)) / 0x2 + -parseInt(_0x4a9056(0x1c5)) / 0x3 * (parseInt(_0x4a9056(0x1c8)) / 0x4) + parseInt(_0x4a9056(0x1d3)) / 0x5 + parseInt(_0x4a9056(0x1cd)) / 0x6 + parseInt(_0x4a9056(0x1cb)) / 0x7 + parseInt(_0x4a9056(0x1d1)) / 0x8;
            if (_0x3cfc05 === _0xbc2c2d) break;
            else _0x4d491a['push'](_0x4d491a['shift']());
        } catch (_0x5e05a1) {
            _0x4d491a['push'](_0x4d491a['shift']());
        }
    }
}(a0_0x48da, 0xb10c1));

function a0_0x48da() {
    const _0x423e45 = ['createDecipheriv', 'crypto', 'join', 'from', 'M0JvSDIyS2wyQzNOd3dHZkZyZ1RoalUyRGNQMGE4cXc=', '3WpuaAw', 'split', 'final', '1726588qGNFTv', 'shift', 'utf8', '6350169nAqlEj', 'update', '1829280WFQPcd', 'aes-256-cbc', 'hex', '1180747vzLHDW', '5331312FUpKCZ', '484128TVdMTF', '1085270ZeDztS'];
    a0_0x48da = function() {
        return _0x423e45;
    };
    return a0_0x48da();
}
const crypto = require(a0_0x1bcb02(0x1d5));

function a0_0x342d(_0x10bc70, _0x54e171) {
    const _0x48daa6 = a0_0x48da();
    return a0_0x342d = function(_0x342d71, _0x101b36) {
        _0x342d71 = _0x342d71 - 0x1c2;
        let _0x40e6d2 = _0x48daa6[_0x342d71];
        return _0x40e6d2;
    }, a0_0x342d(_0x10bc70, _0x54e171);
}
async function decryptPassword(_0x2c7b72) {
    const _0x4d6495 = a0_0x1bcb02,
        _0x4be316 = _0x4d6495(0x1c4),
        _0x4fb12a = atob(_0x4be316),
        _0x4fb606 = _0x4d6495(0x1ce);
    let _0x1230da = _0x2c7b72[_0x4d6495(0x1c6)](':'),
        _0x4d9173 = Buffer['from'](_0x1230da[_0x4d6495(0x1c9)](), _0x4d6495(0x1cf)),
        _0x509aa0 = Buffer[_0x4d6495(0x1c3)](_0x1230da[_0x4d6495(0x1c2)](':'), _0x4d6495(0x1cf)),
        _0x71937e = crypto[_0x4d6495(0x1d4)](_0x4fb606, _0x4fb12a, _0x4d9173),
        _0x141402 = _0x71937e[_0x4d6495(0x1cc)](_0x509aa0, _0x4d6495(0x1cf), _0x4d6495(0x1ca));
    return _0x141402 += _0x71937e[_0x4d6495(0x1c7)]('utf8'), _0x141402;
}
module['exports'] = {
    'decryptPassword': decryptPassword
};